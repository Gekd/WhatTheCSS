     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: ./example/example.go:1:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: ./example/example.go:1:9
     5  .  .  Name: "main"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 2) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: nil
    11  .  .  .  TokPos: ./example/example.go:3:1
    12  .  .  .  Tok: import
    13  .  .  .  Lparen: -
    14  .  .  .  Specs: []ast.Spec (len = 1) {
    15  .  .  .  .  0: *ast.ImportSpec {
    16  .  .  .  .  .  Doc: nil
    17  .  .  .  .  .  Name: nil
    18  .  .  .  .  .  Path: *ast.BasicLit {
    19  .  .  .  .  .  .  ValuePos: ./example/example.go:3:8
    20  .  .  .  .  .  .  Kind: STRING
    21  .  .  .  .  .  .  Value: "\"fmt\""
    22  .  .  .  .  .  }
    23  .  .  .  .  .  Comment: nil
    24  .  .  .  .  .  EndPos: -
    25  .  .  .  .  }
    26  .  .  .  }
    27  .  .  .  Rparen: -
    28  .  .  }
    29  .  .  1: *ast.FuncDecl {
    30  .  .  .  Doc: nil
    31  .  .  .  Recv: nil
    32  .  .  .  Name: *ast.Ident {
    33  .  .  .  .  NamePos: ./example/example.go:5:6
    34  .  .  .  .  Name: "main"
    35  .  .  .  .  Obj: *ast.Object {
    36  .  .  .  .  .  Kind: func
    37  .  .  .  .  .  Name: "main"
    38  .  .  .  .  .  Decl: *(obj @ 29)
    39  .  .  .  .  .  Data: nil
    40  .  .  .  .  .  Type: nil
    41  .  .  .  .  }
    42  .  .  .  }
    43  .  .  .  Type: *ast.FuncType {
    44  .  .  .  .  Func: ./example/example.go:5:1
    45  .  .  .  .  TypeParams: nil
    46  .  .  .  .  Params: *ast.FieldList {
    47  .  .  .  .  .  Opening: ./example/example.go:5:10
    48  .  .  .  .  .  List: nil
    49  .  .  .  .  .  Closing: ./example/example.go:5:11
    50  .  .  .  .  }
    51  .  .  .  .  Results: nil
    52  .  .  .  }
    53  .  .  .  Body: *ast.BlockStmt {
    54  .  .  .  .  Lbrace: ./example/example.go:5:13
    55  .  .  .  .  List: []ast.Stmt (len = 2) {
    56  .  .  .  .  .  0: *ast.AssignStmt {
    57  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
    58  .  .  .  .  .  .  .  0: *ast.Ident {
    59  .  .  .  .  .  .  .  .  NamePos: ./example/example.go:6:2
    60  .  .  .  .  .  .  .  .  Name: "greeting"
    61  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    62  .  .  .  .  .  .  .  .  .  Kind: var
    63  .  .  .  .  .  .  .  .  .  Name: "greeting"
    64  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 56)
    65  .  .  .  .  .  .  .  .  .  Data: nil
    66  .  .  .  .  .  .  .  .  .  Type: nil
    67  .  .  .  .  .  .  .  .  }
    68  .  .  .  .  .  .  .  }
    69  .  .  .  .  .  .  }
    70  .  .  .  .  .  .  TokPos: ./example/example.go:6:11
    71  .  .  .  .  .  .  Tok: :=
    72  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
    73  .  .  .  .  .  .  .  0: *ast.BasicLit {
    74  .  .  .  .  .  .  .  .  ValuePos: ./example/example.go:6:14
    75  .  .  .  .  .  .  .  .  Kind: STRING
    76  .  .  .  .  .  .  .  .  Value: "\"Hello, World!\""
    77  .  .  .  .  .  .  .  }
    78  .  .  .  .  .  .  }
    79  .  .  .  .  .  }
    80  .  .  .  .  .  1: *ast.ExprStmt {
    81  .  .  .  .  .  .  X: *ast.CallExpr {
    82  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
    83  .  .  .  .  .  .  .  .  X: *ast.Ident {
    84  .  .  .  .  .  .  .  .  .  NamePos: ./example/example.go:7:2
    85  .  .  .  .  .  .  .  .  .  Name: "fmt"
    86  .  .  .  .  .  .  .  .  .  Obj: nil
    87  .  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    89  .  .  .  .  .  .  .  .  .  NamePos: ./example/example.go:7:6
    90  .  .  .  .  .  .  .  .  .  Name: "Println"
    91  .  .  .  .  .  .  .  .  .  Obj: nil
    92  .  .  .  .  .  .  .  .  }
    93  .  .  .  .  .  .  .  }
    94  .  .  .  .  .  .  .  Lparen: ./example/example.go:7:13
    95  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
    96  .  .  .  .  .  .  .  .  0: *ast.Ident {
    97  .  .  .  .  .  .  .  .  .  NamePos: ./example/example.go:7:14
    98  .  .  .  .  .  .  .  .  .  Name: "greeting"
    99  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 61)
   100  .  .  .  .  .  .  .  .  }
   101  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   102  .  .  .  .  .  .  .  .  .  ValuePos: ./example/example.go:7:24
   103  .  .  .  .  .  .  .  .  .  Kind: STRING
   104  .  .  .  .  .  .  .  .  .  Value: "\"From CSS??\""
   105  .  .  .  .  .  .  .  .  }
   106  .  .  .  .  .  .  .  }
   107  .  .  .  .  .  .  .  Ellipsis: -
   108  .  .  .  .  .  .  .  Rparen: ./example/example.go:7:36
   109  .  .  .  .  .  .  }
   110  .  .  .  .  .  }
   111  .  .  .  .  }
   112  .  .  .  .  Rbrace: ./example/example.go:8:1
   113  .  .  .  }
   114  .  .  }
   115  .  }
   116  .  FileStart: ./example/example.go:1:1
   117  .  FileEnd: ./example/example.go:8:4
   118  .  Scope: *ast.Scope {
   119  .  .  Outer: nil
   120  .  .  Objects: map[string]*ast.Object (len = 1) {
   121  .  .  .  "main": *(obj @ 35)
   122  .  .  }
   123  .  }
   124  .  Imports: []*ast.ImportSpec (len = 1) {
   125  .  .  0: *(obj @ 15)
   126  .  }
   127  .  Unresolved: []*ast.Ident (len = 1) {
   128  .  .  0: *(obj @ 83)
   129  .  }
   130  .  Comments: nil
   131  .  GoVersion: ""
   132  }
